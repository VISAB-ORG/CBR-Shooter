<?xml version="1.0"?>
<doc>
    <assembly>
        <name>VISABConnector</name>
    </assembly>
    <members>
        <member name="T:VISABConnector.DontSerialize">
            <summary>
            Properties decorated with this Attribute wont be serialized
            </summary>
        </member>
        <member name="T:VISABConnector.ClosingEventArgs">
            <summary>
            Event args for when the VISABApi object is being closed
            </summary>
        </member>
        <member name="P:VISABConnector.ClosingEventArgs.RequestHandler">
            <summary>
            The RequestHandler currently in use by the VISABApi object
            </summary>
        </member>
        <member name="T:VISABConnector.Default">
            <summary>
            Contains default values used for communication with the VISAB api in the java project
            </summary>
        </member>
        <member name="T:VISABConnector.IVISABRequestHandler">
            <summary>
            Used for making Requests to the VISAB API (web api in java project)
            </summary>
        </member>
        <member name="M:VISABConnector.IVISABRequestHandler.GetDeserializedResponseAsync``1(System.Net.Http.HttpMethod,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Gets the deserialize response content
            </summary>
            <typeparam name="TResponse">The type to deserialize into</typeparam>
            <param name="httpMethod">The http method used</param>
            <param name="relativeUrl">The relative url to make the request to</param>
            <param name="queryParameters">The query parameters</param>
            <param name="body">The requests body</param>
            <returns>An awaitable Task whose body contains the deserialized object</returns>
        </member>
        <member name="M:VISABConnector.IVISABRequestHandler.GetDeserializedResponseAsync``2(System.Net.Http.HttpMethod,System.String,System.Collections.Generic.IEnumerable{System.String},``0)">
            <summary>
            Gets the deserialize response content
            </summary>
            <typeparam name="TResponse">The type to deserialize into</typeparam>
            <typeparam name="TBody">The type of the body</typeparam>
            <param name="httpMethod">The http method used</param>
            <param name="relativeUrl">The relative url to make the request to</param>
            <param name="queryParameters">The query parameters</param>
            <param name="body">The requests body</param>
            <returns>An awaitable Task whose body contains the deserialized object</returns>
        </member>
        <member name="M:VISABConnector.IVISABRequestHandler.GetJsonResponseAsync(System.Net.Http.HttpMethod,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Gets the json response content
            </summary>
            <param name="httpMethod">The http method used</param>
            <param name="relativeUrl">The relative url to make the request to</param>
            <param name="queryParameters">The query parameters</param>
            <param name="body">The requests body</param>
            <returns>An awaitable Task whose body contains the json string</returns>
        </member>
        <member name="M:VISABConnector.IVISABRequestHandler.GetJsonResponseAsync``1(System.Net.Http.HttpMethod,System.String,System.Collections.Generic.IEnumerable{System.String},``0)">
            <summary>
            Gets the json response content
            </summary>
            <typeparam name="TBody">The type of the body</typeparam>
            <param name="httpMethod">The http method used</param>
            <param name="relativeUrl">The relative url to make the request to</param>
            <param name="queryParameters">The query parameters</param>
            <param name="body">The requests body</param>
            <returns>An awaitable Task whose body contains the json string</returns>
        </member>
        <member name="M:VISABConnector.IVISABRequestHandler.GetSuccessResponseAsync(System.Net.Http.HttpMethod,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Gets whether the requests response status was successful
            </summary>
            <param name="httpMethod">The http method used</param>
            <param name="relativeUrl">The relative url to make the request to</param>
            <param name="queryParameters">The query parameters</param>
            <param name="body">The requests body</param>
            <returns>An awaitable Task whose body contains whether the request was successful</returns>
        </member>
        <member name="M:VISABConnector.IVISABRequestHandler.GetSuccessResponseAsync``1(System.Net.Http.HttpMethod,System.String,System.Collections.Generic.IEnumerable{System.String},``0)">
            <summary>
            Gets whether the requests response status was successful
            </summary>
            <typeparam name="TBody">The type of the body</typeparam>
            <param name="httpMethod">The http method used</param>
            <param name="relativeUrl">The relative url to make the request to</param>
            <param name="queryParameters">The query parameters</param>
            <param name="body">The requests body</param>
            <returns>An awaitable Task whose body contains whether the request was successful</returns>
        </member>
        <member name="T:VISABConnector.RequestHandlerBase">
            <summary>
            Base class used for making HTTP requests. Classes making HTTP Requests should inherit from this.
            </summary>
        </member>
        <member name="F:VISABConnector.RequestHandlerBase.httpClient">
            <summary>
            The used HttpClient
            </summary>
        </member>
        <member name="M:VISABConnector.RequestHandlerBase.#ctor(System.String)">
            <summary>
            Initializes a RequestHandlerBase instance
            </summary>
            <param name="baseAdress">The base adress for the HttpClient</param>
        </member>
        <member name="M:VISABConnector.RequestHandlerBase.GetResponseAsync(System.Net.Http.HttpMethod,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Makes a http request and gets the HttpResponseMessage object
            </summary>
            <param name="httpMethod">The http method used</param>
            <param name="relativeUrl">The relative url to make the request to</param>
            <param name="queryParameters">The query parameters</param>
            <param name="body">The requests body</param>
            <returns>The HttpResponseMessage object</returns>
        </member>
        <member name="M:VISABConnector.RequestHandlerBase.BuildParameterizedUrl(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Builds a parametrized url from the given query parameters
            </summary>
            <param name="relativeUrl">The relative url without the parameters</param>
            <param name="queryParameters">The query parameters to add</param>
            <returns>A parametrized url</returns>
        </member>
        <member name="M:VISABConnector.RequestHandlerBase.PrepareRequest(System.Net.Http.HttpMethod,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Builds a HttpRequestMessage object
            </summary>
            <param name="httpMethod">The http method used</param>
            <param name="relativeUrl">The relative url to make the request to</param>
            <param name="queryParameters">The query parameters</param>
            <param name="body">The requests body</param>
            <returns>The built HttpRequestMessage object</returns>
        </member>
        <member name="T:VISABConnector.VISABRequestHandler">
            <inheritdoc cref="T:VISABConnector.IVISABRequestHandler"/>
        </member>
        <member name="M:VISABConnector.VISABRequestHandler.#ctor(System.String,System.Guid)">
            <summary>
            Initializes a VISABRequestHandler object
            </summary>
            <param name="gameHeader">The game for which information will be sent</param>
            <param name="sessionIdHeader">The sessionId of the current tranmission session</param>
        </member>
        <member name="M:VISABConnector.VISABRequestHandler.GetDeserializedResponseAsync``1(System.Net.Http.HttpMethod,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)">
            <inheritdoc/>
        </member>
        <member name="M:VISABConnector.VISABRequestHandler.GetDeserializedResponseAsync``2(System.Net.Http.HttpMethod,System.String,System.Collections.Generic.IEnumerable{System.String},``0)">
            <inheritdoc/>
        </member>
        <member name="M:VISABConnector.VISABRequestHandler.GetJsonResponseAsync(System.Net.Http.HttpMethod,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)">
            <inheritdoc/>
        </member>
        <member name="M:VISABConnector.VISABRequestHandler.GetJsonResponseAsync``1(System.Net.Http.HttpMethod,System.String,System.Collections.Generic.IEnumerable{System.String},``0)">
            <inheritdoc/>
        </member>
        <member name="M:VISABConnector.VISABRequestHandler.GetSuccessResponseAsync(System.Net.Http.HttpMethod,System.String,System.Collections.Generic.IEnumerable{System.String},System.String)">
            <inheritdoc/>
        </member>
        <member name="M:VISABConnector.VISABRequestHandler.GetSuccessResponseAsync``1(System.Net.Http.HttpMethod,System.String,System.Collections.Generic.IEnumerable{System.String},``0)">
            <inheritdoc/>
        </member>
        <member name="T:VISABConnector.IgnorePropertyContractResolver`1">
            <summary>
            Contract resolver that doesn't serialize properties decorated with attributes of type T.
            </summary>
            <typeparam name="T">The attribute type to ignore</typeparam>
        </member>
        <member name="T:VISABConnector.IVISABStatistics">
            <summary>
            The interface all statistics objects have to implement.
            </summary>
        </member>
        <member name="P:VISABConnector.IVISABStatistics.Game">
            <summary>
            The game of which statistics are sent
            </summary>
        </member>
        <member name="T:VISABConnector.VISABApi">
            <summary>
            Class for communicating with the VISAB api running in the java project
            </summary>
        </member>
        <member name="F:VISABConnector.VISABApi.ENDPOINT_GAME_SUPPORTED">
            <summary>
            Relative endpoint for checking useability for current game in VISAB API
            </summary>
        </member>
        <member name="F:VISABConnector.VISABApi.ENDPOINT_MAP">
            <summary>
            Relative endpoint for sending maps in VISAB API
            </summary>
        </member>
        <member name="F:VISABConnector.VISABApi.ENDPOINT_PING_TEST">
            <summary>
            Relative endpoint for ping testing the VISAB API
            </summary>
        </member>
        <member name="F:VISABConnector.VISABApi.ENDPOINT_SESSION_CLOSE">
            <summary>
            Relative endpoint for closing session in VISAB API
            </summary>
        </member>
        <member name="F:VISABConnector.VISABApi.ENDPOINT_SESSION_LIST">
            <summary>
            Relative endpoints for listing the currently active sessions in VISAB API
            </summary>
        </member>
        <member name="F:VISABConnector.VISABApi.ENDPOINT_SESSION_OPEN">
            <summary>
            Relative endpoint for opening session in VISAB API
            </summary>
        </member>
        <member name="F:VISABConnector.VISABApi.ENDPOINT_SESSION_STATUS">
            <summary>
            Relative endpoints for checking session status in VISAB API
            </summary>
        </member>
        <member name="F:VISABConnector.VISABApi.ENDPOINT_STATISTICS">
            <summary>
            Relative endpoint for sending statistics in VISAB API
            </summary>
        </member>
        <member name="E:VISABConnector.VISABApi.CloseSessionEvent">
            <summary>
            Event that is invoked before closing the session;
            </summary>
        </member>
        <member name="P:VISABConnector.VISABApi.Game">
            <summary>
            The name of the game from which data will be sent
            </summary>
        </member>
        <member name="P:VISABConnector.VISABApi.IsActive">
            <summary>
            Whether the session is active for the VISAB api
            </summary>
        </member>
        <member name="P:VISABConnector.VISABApi.RequestHandler">
            <summary>
            The RequestHandler used by the VISABApi object
            </summary>
        </member>
        <member name="P:VISABConnector.VISABApi.SessionId">
            <summary>
            The unique identifier for the current session
            </summary>
        </member>
        <member name="M:VISABConnector.VISABApi.GameIsSupported(System.String)">
            <summary>
            Indicates if the VISAB api can receive data for the game
            </summary>
            <param name="game">The game to check</param>
            <returns>True if game is supported, false else</returns>
        </member>
        <member name="M:VISABConnector.VISABApi.InitiateSession(System.String)">
            <summary>
            Creates a VISABApi object
            </summary>
            <param name="game">The game of which to sent data</param>
            <returns>A VISABApi object if the VISAB api is running, else null</returns>
        </member>
        <member name="M:VISABConnector.VISABApi.StartVISAB(System.String)">
            <summary>
            Starts the VISAB jar
            </summary>
            <param name="pathToVisab">The path to the jar file</param>
        </member>
        <member name="M:VISABConnector.VISABApi.CloseSession">
            <summary>
            Closes the session in the VISAB api
            </summary>
            <returns></returns>
        </member>
        <member name="M:VISABConnector.VISABApi.IsReachable">
            <summary>
            Indicates if the VISAB api (web api in java project) is running
            </summary>
        </member>
        <member name="M:VISABConnector.VISABApi.SendStatistics``1(``0)">
            <summary>
            Sends a statistics object to the VISAB api
            </summary>
            <typeparam name="T">The type inheriting IVISABStatistics</typeparam>
            <param name="statistics">The statistics bject of type T</param>
            <returns></returns>
        </member>
        <member name="M:VISABConnector.VISABApi.OpenSession">
            <summary>
            Opens a session in the VISAB api
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
